{"version":3,"sources":["components/AddCategory.js","components/Card.js","helpers/getGif.js","components/Category.js","hooks/useFechGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","value","setvalue","onSubmit","e","preventDefault","trim","length","setCategory","before","className","type","onChange","target","placeholder","Card","src","dato","url","alt","title","date","getGifs","kward","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized","import_datetime","Category","loading","state","setState","useEffect","then","useFechGifs","im","GifExpertApp","category","categoria","ReactDOM","render","document","getElementById"],"mappings":"mQAkCeA,EA9BK,SAACC,GAEjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACtBR,EAAMS,aAAa,SAACC,GAAD,OAAaR,GAAb,mBAAsBQ,OACzCP,EAAS,MAKb,SACI,qBAAKQ,UAAU,aAAf,SACI,uBACIC,KAAK,OAAOD,UAAU,uCACtBT,MAAOA,EACPW,SAlBK,SAACR,GAClBF,EAASE,EAAES,OAAOZ,QAkBNa,YAAY,oBCLjBC,G,MAnBF,SAAChB,GAIV,OACE,qBAAKW,UAAU,SAAf,SACM,sBAAKA,UAAU,kCAAf,UAEI,qBAAKM,IAAKjB,EAAMkB,KAAKC,IAAKC,IAAI,SAC9B,sBAAKT,UAAU,sBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BX,EAAMkB,KAAKG,MAAQrB,EAAMkB,KAAKG,MAAM,eAChE,oBAAGV,UAAU,YAAb,mBAAiCX,EAAMkB,KAAKI,WAEhD,qBAAKX,UAAU,yCAAf,2B,uBChBFY,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACVN,EADU,iDACsCO,UAAUF,GADhD,8DAEGG,MAAMR,GAFT,cAEVS,EAFU,gBAGGA,EAAKC,OAHR,cAGVC,EAHU,OAIVC,EAAQD,EAAKA,KAAME,KAAI,SAAAC,GACzB,MAAO,CACHC,GAAID,EAAIC,GACRb,MAAOY,EAAIZ,MACXF,IAAKc,EAAIE,OAAOC,UAAUjB,IAC1BG,KAAKW,EAAII,oBATD,kBAYTN,GAZS,2CAAH,sDCsBNO,EAlBE,SAACtC,GAEd,MCFuB,SAACwB,GACxB,MAA0BvB,mBAAS,CAAE6B,KAAM,GAAIS,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,qBAAU,WACNnB,EAAQC,GAAOmB,MAAK,SAAAV,GAChBQ,EAAS,CAACX,KAAKG,EAAIM,SAAQ,SAEjC,CAACf,IAEIgB,EDNiBI,CAAY5C,EAAMwB,OAAnCM,EAAP,EAAOA,KAAKS,EAAZ,EAAYA,QAEZ,OACI,gCACI,oBAAI5B,UAAU,2BAAd,SAA0C4B,EAAQ,cAAcvC,EAAMwB,QACtE,qBAAKb,UAAU,gCAAf,SAEYmB,EAAKE,KAAI,SAAAa,GAAE,OAAI,cAAC,EAAD,CAAkB3B,KAAM2B,GAAbA,EAAGX,aEgBtCY,EAzBM,WACjB,MAAgC7C,mBAAS,CAAC,cAA1C,mBAAO8C,EAAP,KAAiBtC,EAAjB,KAIA,OACI,qCACI,oBAAIE,UAAU,MAAd,0BACA,oBAAIA,UAAU,aACd,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAAaF,YAAaA,IAEtBsC,EAASf,KAAK,SAAAgB,GACV,OACI,cAAC,EAAD,CAAUxB,MAAOwB,GAAgBA,aCX7DC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.46a1ad0e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport './styles/AddCategory.css'\r\n\r\nconst AddCategory = (props) => {\r\n\r\n    const [value, setvalue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setvalue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value.trim().length > 0) {\r\n            props.setCategory(((before) => [value,...before]));\r\n            setvalue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\" className='form-control bg-secondary text-white'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    placeholder='buscar gif'\r\n                    />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport  './styles/Card.css'\r\n\r\nconst Card = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n      <div className='col-3 '>\r\n            <div className=\"card border-info bg-transparent\" >\r\n               \r\n                <img src={props.dato.url} alt=\"foto\" />\r\n                <div className=\"card-body text-info\">\r\n                    <h5 className=\"card-title\">{props.dato.title ? props.dato.title:'sin titulo'}</h5>\r\n                    <p className=\"card-text\">fecha:{ props.dato.date }</p>\r\n                </div>\r\n                <div className=\"card-footer bg-transparent border-info\">Footer</div>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n"," export const getGifs = async(kward) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(kward)}&limit=8&api_key=4ztOYiXOIfzZbnOmyll4DxnxoIAvrzUu`;\r\n        const resp = await fetch(url);\r\n        const data = await resp.json();\r\n        const gifs = (data.data).map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized.url,\r\n                date:img.import_datetime\r\n            }\r\n        })\r\n        return(gifs);\r\n        \r\n    }","import React  from 'react'\r\nimport Card from './Card';\r\nimport { useFechGifs } from '../hooks/useFechGifs';\r\n\r\nconst Category = (props) => {\r\n   \r\n    const {data,loading } = useFechGifs(props.kward);\r\n   \r\n    return (\r\n        <div>\r\n            <h1 className='text-center text-primary'>{loading?'cargando...':props.kward }</h1>\r\n            <div className='row border border-primary p-4'>\r\n                    {\r\n                        data.map(im => <Card key={im.id} dato={im} />)\r\n                    }\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGif'\r\n\r\nexport const useFechGifs = (kward) => {\r\n    const [state, setState] = useState({ data: [], loading: true });\r\n    useEffect(() => {\r\n        getGifs(kward).then(img  => {\r\n            setState({data:img,loading:false})\r\n        })\r\n    },[kward])   //si cambia el wkar debe volver a ejecutar\r\n\r\n    return state;\r\n}","\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport Category from './Category'\r\nconst GifExpertApp = () => {\r\n    const [category, setCategory] = useState(['Bad bunny'])\r\n   \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2 className='m-3'>GifExpertApp</h2>\r\n            <hr className='bg-white'/>\r\n            <div className='container'>\r\n                <AddCategory setCategory={setCategory}  />\r\n                {\r\n                    category.map((categoria => {\r\n                        return (\r\n                            <Category kward={categoria} key={categoria}/>\r\n                        )\r\n                    }))\r\n                }\r\n                \r\n                \r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}